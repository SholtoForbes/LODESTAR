function [adigatorFunInfo, adigatorOutputs] = adigatortempfunc1(adigatorFunInfo,adigatorInputs)
[flag, adigatorFunInfo, adigatorInputs] = adigatorFunctionInitialize(1,adigatorFunInfo,adigatorInputs);
if flag; adigatorOutputs = adigatorInputs; return; end;
input = adigatorInputs{1};
nargin = 1; nargout = 1;adigatorVarAnalyzer('% ---------------------------------------------------%');
adigatorVarAnalyzer('% ------ Extract Each Component of the State ------- %');
adigatorVarAnalyzer('% ---------------------------------------------------%');
rad = adigatorVarAnalyzer('global','rad');
rad  = input.phase.state(:,1);
rad = adigatorVarAnalyzer('rad  = input.phase.state(:,1);',rad,'rad',0);
lon  = input.phase.state(:,2);
lon = adigatorVarAnalyzer('lon  = input.phase.state(:,2);',lon,'lon',0);
lat  = input.phase.state(:,3);
lat = adigatorVarAnalyzer('lat  = input.phase.state(:,3);',lat,'lat',0);
v    = input.phase.state(:,4);
v = adigatorVarAnalyzer('v    = input.phase.state(:,4);',v,'v',0);
fpa  = input.phase.state(:,5);
fpa = adigatorVarAnalyzer('fpa  = input.phase.state(:,5);',fpa,'fpa',0);
azi  = input.phase.state(:,6);
azi = adigatorVarAnalyzer('azi  = input.phase.state(:,6);',azi,'azi',0);
aoa  = input.phase.state(:,7);
aoa = adigatorVarAnalyzer('aoa  = input.phase.state(:,7);',aoa,'aoa',0);
bank  = input.phase.state(:,8);
bank = adigatorVarAnalyzer('bank  = input.phase.state(:,8);',bank,'bank',0);
mFuel  = input.phase.state(:,9);
mFuel = adigatorVarAnalyzer('mFuel  = input.phase.state(:,9);',mFuel,'mFuel',0);
throttle  = input.phase.state(:,10);
throttle = adigatorVarAnalyzer('throttle  = input.phase.state(:,10);',throttle,'throttle',0);
adigatorVarAnalyzer('% aoa  = input.phase.control(:,1);');
adigatorVarAnalyzer('% bank = input.phase.control(:,2);');
aoadot  = input.phase.control(:,1);
aoadot = adigatorVarAnalyzer('aoadot  = input.phase.control(:,1);',aoadot,'aoadot',0);
bankdot = input.phase.control(:,2);
bankdot = adigatorVarAnalyzer('bankdot = input.phase.control(:,2);',bankdot,'bankdot',0);
throttledot = input.phase.control(:,3);
throttledot = adigatorVarAnalyzer('throttledot = input.phase.control(:,3);',throttledot,'throttledot',0);
adigatorVarAnalyzer('% bank = 0*ones(length(aoa),1);');
adigatorVarAnalyzer('% ---------------------------------------------------%');
adigatorVarAnalyzer('% ------- Compute the Aerodynamic Quantities --------%');
adigatorVarAnalyzer('% ---------------------------------------------------%');
time = adigatorVarAnalyzer('global','time');
time = input.phase(1).time;
time = adigatorVarAnalyzer('time = input.phase(1).time;',time,'time',0);
auxdata = input.auxdata;
auxdata = adigatorVarAnalyzer('auxdata = input.auxdata;',auxdata,'auxdata',0);
% Call to User Function VehicleModelReturn --- (FunID 7)
cadainput7_1 = fpa;
cadainput7_1 = adigatorVarAnalyzer('cadainput7_1 = fpa;',cadainput7_1,'cadainput7_1',0);
cadainput7_2 = rad;
cadainput7_2 = adigatorVarAnalyzer('cadainput7_2 = rad;',cadainput7_2,'cadainput7_2',0);
cadainput7_3 = v;
cadainput7_3 = adigatorVarAnalyzer('cadainput7_3 = v;',cadainput7_3,'cadainput7_3',0);
cadainput7_4 = auxdata;
cadainput7_4 = adigatorVarAnalyzer('cadainput7_4 = auxdata;',cadainput7_4,'cadainput7_4',0);
cadainput7_5 = azi;
cadainput7_5 = adigatorVarAnalyzer('cadainput7_5 = azi;',cadainput7_5,'cadainput7_5',0);
cadainput7_6 = lat;
cadainput7_6 = adigatorVarAnalyzer('cadainput7_6 = lat;',cadainput7_6,'cadainput7_6',0);
cadainput7_7 = lon;
cadainput7_7 = adigatorVarAnalyzer('cadainput7_7 = lon;',cadainput7_7,'cadainput7_7',0);
cadainput7_8 = aoa;
cadainput7_8 = adigatorVarAnalyzer('cadainput7_8 = aoa;',cadainput7_8,'cadainput7_8',0);
cadainput7_9 = bank;
cadainput7_9 = adigatorVarAnalyzer('cadainput7_9 = bank;',cadainput7_9,'cadainput7_9',0);
cadainput7_10 = throttle;
cadainput7_10 = adigatorVarAnalyzer('cadainput7_10 = throttle;',cadainput7_10,'cadainput7_10',0);
cadainput7_11 = mFuel;
cadainput7_11 = adigatorVarAnalyzer('cadainput7_11 = mFuel;',cadainput7_11,'cadainput7_11',0);
adigatorInputs = {cadainput7_1;cadainput7_2;cadainput7_3;cadainput7_4;cadainput7_5;cadainput7_6;cadainput7_7;cadainput7_8;cadainput7_9;cadainput7_10;cadainput7_11};
[adigatorFunInfo, adigatorOutputs] = adigatortempfunc7(adigatorFunInfo,adigatorInputs);
cadaoutput7_1 = adigatorOutputs{1};
raddot = cadaoutput7_1;
raddot = adigatorVarAnalyzer('raddot = cadaoutput7_1;',raddot,'raddot',0);
cadaoutput7_2 = adigatorOutputs{2};
londot = cadaoutput7_2;
londot = adigatorVarAnalyzer('londot = cadaoutput7_2;',londot,'londot',0);
cadaoutput7_3 = adigatorOutputs{3};
latdot = cadaoutput7_3;
latdot = adigatorVarAnalyzer('latdot = cadaoutput7_3;',latdot,'latdot',0);
cadaoutput7_4 = adigatorOutputs{4};
fpadot = cadaoutput7_4;
fpadot = adigatorVarAnalyzer('fpadot = cadaoutput7_4;',fpadot,'fpadot',0);
cadaoutput7_5 = adigatorOutputs{5};
vdot = cadaoutput7_5;
vdot = adigatorVarAnalyzer('vdot = cadaoutput7_5;',vdot,'vdot',0);
cadaoutput7_6 = adigatorOutputs{6};
azidot = cadaoutput7_6;
azidot = adigatorVarAnalyzer('azidot = cadaoutput7_6;',azidot,'azidot',0);
cadaoutput7_7 = adigatorOutputs{7};
q = cadaoutput7_7;
q = adigatorVarAnalyzer('q = cadaoutput7_7;',q,'q',0);
cadaoutput7_8 = adigatorOutputs{8};
M = cadaoutput7_8;
M = adigatorVarAnalyzer('M = cadaoutput7_8;',M,'M',0);
cadaoutput7_9 = adigatorOutputs{9};
Fd = cadaoutput7_9;
Fd = adigatorVarAnalyzer('Fd = cadaoutput7_9;',Fd,'Fd',0);
cadaoutput7_10 = adigatorOutputs{10};
rho = cadaoutput7_10;
rho = adigatorVarAnalyzer('rho = cadaoutput7_10;',rho,'rho',0);
cadaoutput7_11 = adigatorOutputs{11};
L = cadaoutput7_11;
L = adigatorVarAnalyzer('L = cadaoutput7_11;',L,'L',0);
cadaoutput7_12 = adigatorOutputs{12};
Fueldt = cadaoutput7_12;
Fueldt = adigatorVarAnalyzer('Fueldt = cadaoutput7_12;',Fueldt,'Fueldt',0);
cadaoutput7_13 = adigatorOutputs{13};
T = cadaoutput7_13;
T = adigatorVarAnalyzer('T = cadaoutput7_13;',T,'T',0);
adigatorVarAnalyzer('% ---------------------------------------------------%');
adigatorVarAnalyzer('% ---- Evaluate Right-Hand Side of the Dynamics ---- %');
adigatorVarAnalyzer('% ---------------------------------------------------%');
adigatorVarAnalyzer('% phaseout.dynamics  = [raddot.'', londot.'', latdot.'', vdot.'', fpadot.'', azidot.'', aoadot, bankdot];');
if ~exist('phaseout','var'); phaseout = cadastruct([],'phaseout',[],0); end
phaseout.dynamics  = [raddot, londot, latdot, vdot, fpadot, azidot, aoadot, bankdot, -Fueldt, throttledot];
phaseout = adigatorVarAnalyzer('phaseout.dynamics  = [raddot, londot, latdot, vdot, fpadot, azidot, aoadot, bankdot, -Fueldt, throttledot];',phaseout,'phaseout',1);
if ~exist('phaseout','var'); phaseout = cadastruct([],'phaseout',[],0); end
phaseout.path = q;
phaseout = adigatorVarAnalyzer('phaseout.path = q;',phaseout,'phaseout',1);
adigatorOutputs = {phaseout};
[adigatorFunInfo, adigatorOutputs] = adigatorFunctionEnd(1,adigatorFunInfo,adigatorOutputs);
