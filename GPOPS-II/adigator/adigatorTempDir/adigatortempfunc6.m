function [adigatorFunInfo, adigatorOutputs] = adigatortempfunc6(adigatorFunInfo,adigatorInputs)
[flag, adigatorFunInfo, adigatorInputs] = adigatorFunctionInitialize(6,adigatorFunInfo,adigatorInputs);
if flag; adigatorOutputs = adigatorInputs; return; end;
r = adigatorInputs{1};
xi = adigatorInputs{2};
phi = adigatorInputs{3};
gamma = adigatorInputs{4};
v = adigatorInputs{5};
zeta = adigatorInputs{6};
L = adigatorInputs{7};
D = adigatorInputs{8};
T = adigatorInputs{9};
m = adigatorInputs{10};
alpha = adigatorInputs{11};
eta = adigatorInputs{12};
nargin = 12; nargout = 7;adigatorVarAnalyzer('% Determination of motion in rotating coordinates');
adigatorVarAnalyzer('%xi  Longitude (rad)');
adigatorVarAnalyzer('%phi  Latitude (rad)');
adigatorVarAnalyzer('%gamma  Flight Path Angle (rad)');
adigatorVarAnalyzer('%zeta  Heading Angle (rad)');
% Call to User Function deg2rad --- (FunID 3)
cadainput3_1 = alpha;
cadainput3_1 = adigatorVarAnalyzer('cadainput3_1 = alpha;',cadainput3_1,'cadainput3_1',0);
adigatorInputs = {cadainput3_1};
[adigatorFunInfo, adigatorOutputs] = adigatortempfunc3(adigatorFunInfo,adigatorInputs);
cadaoutput3_1 = adigatorOutputs{1};
alpha = cadaoutput3_1;
alpha = adigatorVarAnalyzer('alpha = cadaoutput3_1;',alpha,'alpha',0);
mu_E = 3.986e14;
mu_E = adigatorVarAnalyzer('mu_E = 3.986e14;',mu_E,'mu_E',0);
omega_E = 7.292115e-5;
omega_E = adigatorVarAnalyzer('omega_E = 7.292115e-5;',omega_E,'omega_E',0);
rdot = v.*sin(gamma);
rdot = adigatorVarAnalyzer('rdot = v.*sin(gamma);',rdot,'rdot',0);
xidot = v.*cos(gamma).*cos(zeta)./(r.*cos(phi));
xidot = adigatorVarAnalyzer('xidot = v.*cos(gamma).*cos(zeta)./(r.*cos(phi));',xidot,'xidot',0);
phidot = v.*cos(gamma).*sin(zeta)./r;
phidot = adigatorVarAnalyzer('phidot = v.*cos(gamma).*sin(zeta)./r;',phidot,'phidot',0);
total_lift = T.*sin(alpha) + L;
total_lift = adigatorVarAnalyzer('total_lift = T.*sin(alpha) + L;',total_lift,'total_lift',0);
adigatorVarAnalyzer('% total_lift = L;');
gammadot = total_lift./(m.*v).*cos(eta) + (v./r - mu_E./(r.^2.*v)).*cos(gamma) + cos(phi).*(2.*omega_E.*cos(zeta) + omega_E.^2.*r./v.*(cos(phi).*cos(gamma)+sin(phi).*sin(gamma).*sin(zeta)));
gammadot = adigatorVarAnalyzer('gammadot = total_lift./(m.*v).*cos(eta) + (v./r - mu_E./(r.^2.*v)).*cos(gamma) + cos(phi).*(2.*omega_E.*cos(zeta) + omega_E.^2.*r./v.*(cos(phi).*cos(gamma)+sin(phi).*sin(gamma).*sin(zeta)));',gammadot,'gammadot',0);
vdot = T.*cos(alpha)./(m) - mu_E.*sin(gamma)./r.^2 -D./m + omega_E.^2.*r.*cos(phi).*(cos(phi).*cos(gamma)+sin(phi).*sin(gamma).*sin(zeta));
vdot = adigatorVarAnalyzer('vdot = T.*cos(alpha)./(m) - mu_E.*sin(gamma)./r.^2 -D./m + omega_E.^2.*r.*cos(phi).*(cos(phi).*cos(gamma)+sin(phi).*sin(gamma).*sin(zeta));',vdot,'vdot',0);
zetadot = total_lift./(m.*v).*sin(eta) -v./r.*tan(phi).*cos(gamma).*cos(zeta) + 2.*omega_E.*cos(phi).*tan(gamma).*sin(zeta) - omega_E.^2.*r./(v.*cos(gamma)).*sin(phi).*cos(phi).*cos(zeta)-2.*omega_E.*sin(phi);
zetadot = adigatorVarAnalyzer('zetadot = total_lift./(m.*v).*sin(eta) -v./r.*tan(phi).*cos(gamma).*cos(zeta) + 2.*omega_E.*cos(phi).*tan(gamma).*sin(zeta) - omega_E.^2.*r./(v.*cos(gamma)).*sin(phi).*cos(phi).*cos(zeta)-2.*omega_E.*sin(phi);',zetadot,'zetadot',0);
adigatorOutputs = {rdot;xidot;phidot;gammadot;vdot;zetadot;total_lift};
[adigatorFunInfo, adigatorOutputs] = adigatorFunctionEnd(6,adigatorFunInfo,adigatorOutputs);
