% Routine to calculate nozzle exit conditions 
% Uses conical shock calculator, the  interpolates






auxdata.interp.engine_data = dlmread('ENGINEDATA.txt');  % reads four columns; Mach no after conical shock, temp after conical shock, Isp, max equivalence ratio
engine_data = auxdata.interp.engine_data;


shockdata = dlmread('ShockMat');
[MList_EngineOff,AOAList_EngineOn] = ndgrid(unique(shockdata(:,1)),unique(shockdata(:,2)));
M1_Grid = reshape(shockdata(:,3),[length(unique(shockdata(:,2))),length(unique(shockdata(:,1)))]).';
pres_Grid = reshape(shockdata(:,4),[length(unique(shockdata(:,2))),length(unique(shockdata(:,1)))]).';
temp_Grid = reshape(shockdata(:,5),[length(unique(shockdata(:,2))),length(unique(shockdata(:,1)))]).';
auxdata.interp.M1gridded = griddedInterpolant(MList_EngineOff,AOAList_EngineOn,M1_Grid,'spline','linear');
auxdata.interp.presgridded = griddedInterpolant(MList_EngineOff,AOAList_EngineOn,pres_Grid,'spline','linear');
auxdata.interp.tempgridded = griddedInterpolant(MList_EngineOff,AOAList_EngineOn,temp_Grid,'spline','linear');




Me_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,4));
Pe_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,5));
Te_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,6));
Ge_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,7));
re_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,8));
P1nom_interpolator = scatteredInterpolant(engine_data(:,1),engine_data(:,2),engine_data(:,9));



mdot = A*Pe/sqrt(T) * sqrt(Ge/R) * Me * (1+(Ge-1)/2*Me^2)^-((Ge+1)

